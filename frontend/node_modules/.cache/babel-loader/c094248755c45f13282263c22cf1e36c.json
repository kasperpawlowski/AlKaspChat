{"ast":null,"code":"var _jsxFileName = \"B:\\\\Block Chain Development\\\\Full Stack Development 1\\\\AlKaspChat\\\\frontend\\\\src\\\\components\\\\eventlog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { saveEvent } from '../../../utils/mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nsaveEvent();\n\nconst ChatEvent = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.saveEvent.type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.saveEvent.user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.saveEvent.time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [props.saveEvent.EventId, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.saveEvent.Ppid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.saveEvent.date.substring(0, 10)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c = ChatEvent;\n\nclass eventlog extends Component {\n  constructor(props) {\n    super(props);\n    this.eventlog = this.eventlog.bind(this);\n    this.state = {\n      eventlog: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/api/').then(response => {\n      if (response.data.length > 0) this.setState({\n        eventlog: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChatEvents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default eventlog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatEvent\");","map":{"version":3,"sources":["B:/Block Chain Development/Full Stack Development 1/AlKaspChat/frontend/src/components/eventlog.js"],"names":["React","Component","axios","saveEvent","ChatEvent","props","type","user","time","EventId","Ppid","date","substring","eventlog","constructor","bind","state","componentDidMount","get","then","response","data","length","setState","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAIAA,SAAS;;AACT,MAAMC,SAAS,GAAGC,KAAK,iBACrB;AAAA,0BACE;AAAA,cAAKA,KAAK,CAACF,SAAN,CAAgBG;AAArB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAKD,KAAK,CAACF,SAAN,CAAgBI;AAArB;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,cAAKF,KAAK,CAACF,SAAN,CAAgBK;AAArB;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA,eAAKH,KAAK,CAACF,SAAN,CAAgBM,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAA,cAAKJ,KAAK,CAACF,SAAN,CAAgBO;AAArB;AAAA;AAAA;AAAA;AAAA,UALF,eAME;AAAA,cAAKL,KAAK,CAACF,SAAN,CAAgBQ,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,EAAiC,EAAjC;AAAL;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,S;;AAaN,MAAMS,QAAN,SAAuBZ,SAAvB,CAAgC;AAC5Ba,EAAAA,WAAW,CAACT,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKQ,QAAL,GAAe,KAAKA,QAAL,CAAcE,IAAd,CAAmB,IAAnB,CAAf;AACA,SAAKC,KAAL,GAAa;AAACH,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAGDI,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,KAAK,CAACgB,GAAN,CAAU,4BAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAsB,CAA1B,EAEF,KAAKC,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEO,QAAQ,CAACC;AAArB,OAAd;AACD,KALH,EAMGG,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH;AASD;;AAEHG,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAA,6BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AA3B2B;;AA8BhC,eAAef,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { saveEvent } from '../../../utils/mongoose';\r\n\r\n\r\n\r\nsaveEvent()\r\nconst ChatEvent = props => (\r\n  <tr>\r\n    <td>{props.saveEvent.type}</td>\r\n    <td>{props.saveEvent.user}</td>\r\n    <td>{props.saveEvent.time}</td>\r\n    <td>{props.saveEvent.EventId} </td>\r\n    <td>{props.saveEvent.Ppid}</td>\r\n    <td>{props.saveEvent.date.substring(0,10)}</td>\r\n  </tr>\r\n)\r\n\r\n\r\n\r\nclass eventlog extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.eventlog =this.eventlog.bind(this)\r\n        this.state = {eventlog: []};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/api/')\r\n          .then(response => {\r\n              if (response.data.length >0)\r\n\r\n            this.setState({ eventlog: response.data })\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n        <ChatEvents/>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default eventlog;\r\n"]},"metadata":{},"sourceType":"module"}